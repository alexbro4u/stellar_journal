// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	stellar_journal_models "stellar_journal/internal/models/stellar_journal_models"

	mock "github.com/stretchr/testify/mock"
)

// APODByDateGetter is an autogenerated mock type for the APODByDateGetter type
type APODByDateGetter struct {
	mock.Mock
}

// GetAPOD provides a mock function with given fields: date
func (_m *APODByDateGetter) GetAPOD(date string) (*stellar_journal_models.APOD, error) {
	ret := _m.Called(date)

	var r0 *stellar_journal_models.APOD
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*stellar_journal_models.APOD, error)); ok {
		return rf(date)
	}
	if rf, ok := ret.Get(0).(func(string) *stellar_journal_models.APOD); ok {
		r0 = rf(date)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*stellar_journal_models.APOD)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(date)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAPODByDateGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewAPODByDateGetter creates a new instance of APODByDateGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAPODByDateGetter(t mockConstructorTestingTNewAPODByDateGetter) *APODByDateGetter {
	mock := &APODByDateGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
